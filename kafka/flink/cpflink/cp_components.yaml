apiVersion: platform.confluent.io/v1beta1
kind: KRaftController
metadata:
  name: kraftcontroller
  namespace: confluent
spec:
  license:
    secretRef: cp-license-2
  dataVolumeCapacity: 10G
  image:
    application: confluentinc/cp-server:7.8.0
    init: confluentinc/confluent-init-container:2.10.0
  listeners:
    controller:
      tls:
        enabled: true
        secretRef: kafka-tls
      authentication:
        type: oauth
        jaasConfig:
          secretRef: oauth-jass
        oauthSettings:
          tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
          expectedIssuer: http://keycloak:8080/realms/sso_test
          jwksEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs
          subClaimName: client_id
  authorization:
    type: rbac
    superUsers:
      - User:operator # required: default user corresponding to replication listener in kafka, ow will get topic authorization error
      - User:kafka
      - User:ssologin
  dependencies:
    mdsKafkaCluster:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9073
      authentication:
        type: oauth
        jaasConfig:
          secretRef: oauth-jass
        oauthSettings:
          tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
      tls:
        enabled: true
        secretRef: kafka-tls
  tls:
    secretRef: kafka-tls
  replicas: 3
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: confluent
spec:
  configOverrides:
    log4j:
      - log4j.logger.io.confluent.rest-utils=DEBUG, stdout
      - log4j.additivity.io.confluent.rest-utils=false
      - log4j.logger.io.confluent.rbacapi=DEBUG, stdout
      - log4j.additivity.io.confluent.rbacapi=false
      - log4j.logger.io.confluent.tokenapi=DEBUG, stdout
      - log4j.additivity.io.confluent.tokenapi=false
      - log4j.logger.io.confluent.security.auth=DEBUG, stdout
      - log4j.additivity.io.confluent.security.auth=false
      - log4j.logger.io.confluent.security.store=DEBUG, stdout
      - log4j.additivity.io.confluent.security.store=false
      - log4j.logger.io.confluent.common.security.jetty=DEBUG, stdout
      - log4j.additivity.io.confluent.common.security.jetty=false
      - log4j.logger.io.confluent.security.auth.provider.ldap=TRACE, stdout
  license:
    secretRef: cp-license-2
  replicas: 3
  image:
    application: confluentinc/cp-server:7.8.0
    init: confluentinc/confluent-init-container:2.10.0
  dataVolumeCapacity: 20Gi
  tls:
    secretRef: kafka-tls
  listeners:
    external:
      authentication:
        type: oauth
        oauthSettings:
          tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
          expectedIssuer: http://keycloak:8080/realms/sso_test
          jwksEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs
          subClaimName: client_id
      tls:
        secretRef: kafka-tls
        enabled: true
    internal:
      authentication:
        type: plain
        jaasConfig:
          secretRef: credential
      tls:
        enabled: true
        secretRef: kafka-tls
    replication:
      authentication:
        type: oauth
        jaasConfig:
          secretRef: oauth-jass
        oauthSettings:
          tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
          expectedIssuer: http://keycloak:8080/realms/sso_test
          jwksEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs
          subClaimName: client_id
      tls:
        secretRef: kafka-tls
        enabled: true
    custom:
      - name: customoauth
        port: 9094
        authentication:
          type: oauth
          oauthSettings:
            tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
            expectedIssuer: http://keycloak:8080/realms/sso_test
            jwksEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs
            subClaimName: client_id
        tls:
          secretRef: kafka-tls
          enabled: true
  authorization:
    type: rbac
    superUsers:
      - User:operator # required: default user corresponding to replication listener in kafka, ow will get topic authorization error
      - User:ssologin
      - User:kafka
  services:
    mds:
      tls:
        enabled: true
        secretRef: kafka-tls
      tokenKeyPair:
        secretRef: mds-token
      provider:
        oauth:
          configurations:
            expectedIssuer: http://keycloak:8080/realms/sso_test
            jwksEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs
            subClaimName: client_id
  dependencies:
    kRaftController:
      controllerListener:
        tls:
          enabled: true
          secretRef: kafka-tls
        authentication:
          type: oauth
          jaasConfig:
            secretRef: oauth-jass
          oauthSettings:
            tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
      clusterRef:
        name: kraftcontroller
    kafkaRest:
      authentication:
        type: oauth
        jaasConfig:
          secretRef: oauth-jass
        oauthSettings:
          tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
          expectedIssuer: http://keycloak:8080/realms/sso_test
          jwksEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/certs
          subClaimName: client_id
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestClass
metadata:
  name: default
  namespace: confluent
spec:
  kafkaRest:
    authentication:
      type: oauth
      oauth:
        secretRef: oauth-jass
        configuration:
          tokenEndpointUri: http://keycloak:8080/realms/sso_test/protocol/openid-connect/token
---
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: ssologin-sysadmin
  namespace: confluent
spec:
  clustersScopeByIds:
    kafkaClusterId: 9532bfd0-946e-4235-bd4
  principal:
    name: ssologin
    type: user
  role: SystemAdmin
---
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: venky-client-1-topic-test
  namespace: confluent
spec:
  clustersScopeByIds:
    kafkaClusterId: 9532bfd0-946e-4235-bd4
  principal:
    name: venky_client_1
    type: user
  role: ResourceOwner
  resourcePatterns:
  - name: test
    patternType: PREFIXED
    resourceType: Topic
---
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: flink-client-1-crb-topics
  namespace: confluent
spec:
  clustersScopeByIds:
    kafkaClusterId: 9532bfd0-946e-4235-bd4
  principal:
    name: flink_client_1
    type: user
  role: ResourceOwner
  resourcePatterns:
  - name: test
    patternType: PREFIXED
    resourceType: Topic
---
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: ssologin-crb-cmf
  namespace: confluent
spec:
  clustersScopeByIds:
    cmfId: CMF-id
  principal:
    name: ssologin
    type: user
  role: SystemAdmin
---
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: sslcn-crb-cmf
  namespace: confluent
spec:
  clustersScopeByIds:
    cmfId: CMF-id
  principal:
    name: "CN=*.my.domain,L=Earth,ST=Pangea,C=Universe"
    type: user
  role: SystemAdmin
---
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: flink-sysadmin-crb-cmf
  namespace: confluent
spec:
  clustersScopeByIds:
    cmfId: CMF-id
    flinkEnvironmentId: flink-env1
  principal:
    name: flink_sysadmin
    type: user
  role: SystemAdmin
---
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: flink-client-1-crb-cmf-flinkmanage
  namespace: confluent
spec:
  clustersScopeByIds:
    cmfId: CMF-id
    flinkEnvironmentId: flink-env1
  principal:
    name: flink_client_1
    type: user
  role: DeveloperManage
  resourcePatterns:
  - name: flink
    patternType: PREFIXED
    resourceType: FlinkApplication
---
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: flink-client-1-crb-cmf-flinkread
  namespace: confluent
spec:
  clustersScopeByIds:
    cmfId: CMF-id
    flinkEnvironmentId: flink-env1
  principal:
    name: flink_client_1
    type: user
  role: DeveloperRead
  resourcePatterns:
  - name: flink
    patternType: PREFIXED
    resourceType: FlinkApplication
---
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: flink-sysadmin-crb-cmf-flinkmanage
  namespace: confluent
spec:
  clustersScopeByIds:
    cmfId: CMF-id
    flinkEnvironmentId: flink-env1
  principal:
    name: flink_sysadmin
    type: user
  role: DeveloperManage
  resourcePatterns:
  - name: flink
    patternType: PREFIXED
    resourceType: FlinkApplication
---
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: flink-sysadmin-1-crb-cmf-flinkread
  namespace: confluent
spec:
  clustersScopeByIds:
    cmfId: CMF-id
    flinkEnvironmentId: flink-env1
  principal:
    name: flink_sysadmin
    type: user
  role: DeveloperRead
  resourcePatterns:
  - name: flink
    patternType: PREFIXED
    resourceType: FlinkApplication
---
apiVersion: platform.confluent.io/v1beta1
kind: ConfluentRolebinding
metadata:
  name: flink-sysadmin-crb-cmf-allresources
  namespace: confluent
spec:
  clustersScopeByIds:
    cmfId: CMF-id
    flinkEnvironmentId: flink-env1
  principal:
    name: flink_sysadmin
    type: user
  role: ClusterAdmin
---
